<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <!-- acegi安全框架 配置文件 主要配置:  安全拦截器, 认证管理器, 决策管理器. -->

    <!-- ===========认证过滤器 用于拦截指定URL======= -->
    <bean id="authenticationProcessingFilter"
          class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
        <!-- 指定认证管理器 -->
        <property name="authenticationManager"
                  ref="authenticationManager"/>
        <!-- 登录失败后的URL -->
        <property name="authenticationFailureUrl"
                  value="/login/login.jsp?error=1"/>
        <!-- 登录成功后的URL -->
        <property name="defaultTargetUrl" value="/index.action"/>
        <!-- 指定要拦截的URL ：登录URL -->
        <property name="filterProcessesUrl" value="/login/logins.action"/>
        <!-- 采用RemeberMe机制 注入 RememberMeServices -->
        <property name="rememberMeServices" ref="rememberMeServices"/>
    </bean>

    <!--================ 认证管理器=============== -->
    <bean id="authenticationManager"
          class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <!-- 认证服务提供者的实现类列表 -->
                <ref bean="daoAuthenticationProvider"/> <!-- 基于DAO认证 -->
                <ref bean="rememberMeAuthenticationProvider"/> <!-- 实现RemeberMe机制 认证 -->
            </list>
        </property>
        <property name="sessionController" ref="concurrentSessionController"/>
    </bean>
    <!-- 此处自定义验证类，实现UserDetailsService -->
    <bean id="userDetailsService"
          class="com.wnwl.CPN2025.acegi.AcegiUserDeitailsService">
        <property name="userService" ref="userService"/>
    </bean>
    <!--================ 基于DAO验证的AuthenticationProvider ======= -->
    <bean id="daoAuthenticationProvider"
          class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder" ref="passwordEncoder">
        </property>
    </bean>

    <bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.ShaPasswordEncoder"/>
    <!--
    也可以使用系统提供的InMemoryDaoImpl或jdbcDaoImpl
    InMemoryDaoImpl用于实现配置文件验证
    jdbcDaoImpl用于实现数据库验证
    -->

    <!--================ 基于RemeberMe机制的验证服务 ======= -->
    <!-- RememberMeAuthenticationProvider负责对基于Cookie的用户凭证信息进行验证 -->
    <bean id="rememberMeAuthenticationProvider"
          class="org.acegisecurity.providers.rememberme.RememberMeAuthenticationProvider">
        <property name="key" value="198910310@qq.com"/><!-- cookie中加密串关键字 -->
    </bean>

    <bean id="rememberMeServices"
          class="org.acegisecurity.ui.rememberme.TokenBasedRememberMeServices">
        <!-- 注入userDetailsService，从而获取Authentication对象 -->
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="parameter" value="j_remember_me"/>
        <!-- 设置key值，防止加密串被恶意篡改 -->
        <property name="key" value="198910310@qq.com"/>
        <!-- cookie的有效期 单位为秒 -->
        <property name="tokenValiditySeconds" value="31536000"/>
    </bean>

    <!-- ========================= 过滤器链 其中可以定义多个过滤器========== -->
    <bean id="filterChainProxy"
          class="org.acegisecurity.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /css/**=#NONE#
                /fusioncharts/**=#NONE#
                /jquery/**=#NONE#
                /javascript/**=#NONE#
                /img/**=#NONE#
                /**/*.swf=#NONE#
                /**=httpSessionContextIntegrationFilter,onlineFilter,concurrentSessionFilter,rememberMeFilter,authenticationProcessingFilter,exceptionFilter,logoutFilter<!-- ,securityInterceptor  -->
            </value>
        </property>
    </bean>

    <!-- ======HttpSessionContextIntegrationFilter 负责完成Acegi上下文与HTTP Session同步 =========== -->
    <bean id="httpSessionContextIntegrationFilter"
          class="org.acegisecurity.context.HttpSessionContextIntegrationFilter"/>

    <!-- ====== 系统退出过滤器 -->
    <bean id="logoutFilter" class="org.acegisecurity.ui.logout.LogoutFilter">
        <constructor-arg>
            <list>
                <ref bean="rememberMeServices"/>
                <bean class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler"/>

            </list>
        </constructor-arg>
        <constructor-arg value="/login/login.jsp"/>
        <property name="filterProcessesUrl" value="/login/exitLogin.action"/>
    </bean>
    <!-- <bean id="logoutFilter"
        class="org.acegisecurity.ui.logout.LogoutFilter">
        登录退出后的URL
        <constructor-arg value="/login/login.jsp" />
        <constructor-arg>
            <list>
                <ref bean="rememberMeServices" />
                <bean
                    class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler" />
            </list>
        </constructor-arg>
        登录退出的URL

           <property name="filterProcessesUrl" value="login/exitLogin.action"/>
    </bean> -->


    <bean id="rememberMeFilter"
          class="org.acegisecurity.ui.rememberme.RememberMeProcessingFilter">
        <property name="authenticationManager"
                  ref="authenticationManager"/>
        <property name="rememberMeServices" ref="rememberMeServices"/>
    </bean>
    <bean id="onlineFilter"
          class="com.wnwl.CPN2025.interceptor.OnlineFilter">
    </bean>
    <!-- ExceptionTranslationFilter 负责处理认证和授权中出现的异常。如果出现异常，调用EntryPoint -->
    <bean id="exceptionFilter"
          class="org.acegisecurity.ui.ExceptionTranslationFilter">
        <!-- 出现AuthenticationException时的登录入口 -->
        <property name="authenticationEntryPoint">
            <bean
                    class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
                <property name="loginFormUrl" value="/login/securityError.jsp"/>
                <property name="forceHttps" value="false"/>
            </bean>
        </property>
        <!-- 出现AccessDeniedException时的Handler -->
        <property name="accessDeniedHandler">
            <bean
                    class="org.acegisecurity.ui.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/login/securityError.jsp"/>
            </bean>
        </property>
    </bean>

    <!-- ==== 负责完成用户的授权。给受保护的Web资源指定角色，指定授权策略 ===== -->
    <bean id="securityInterceptor"
          class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
        <!--  指派认证管理器   -->
        <property name="authenticationManager"
                  ref="authenticationManager"/>
        <!-- 指派访问策略管理器  -->
        <property name="accessDecisionManager"
                  ref="accessDecisionManager"/>
        <!-- Web资源/角色信息，写死在配置文件中 一般用于演示 -->
        <!-- <property name="objectDefinitionSource">
            <value>

                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /admin/**=ROLE_ADMIN
                /user/**=ROLE_USER

            </value>
        </property> -->
        <property name="objectDefinitionSource" ref="urlFilterInvocationDefinitionSource">

        </property>
    </bean>
    <bean id="urlFilterInvocationDefinitionSource"
          class="com.wnwl.CPN2025.acegi.UrlFilterInvocationDefinitionSource">
        <property name="urlInvocationDefinition" ref="urlInvocationDefinition"></property>
    </bean>
    <bean id="urlInvocationDefinition"
          class="com.wnwl.CPN2025.acegi.UrlSecuredUrlDefinition">
        <property name="systemService" ref="systemService"></property>
    </bean>
    <bean id="concurrentSessionFilter" class="org.acegisecurity.concurrent.ConcurrentSessionFilter">
        <property name="sessionRegistry" ref="sessionRegistry"></property>
        <!-- 
            如果concurrentSessionController的exceptionIfMaximumExceeded属性设置为true，那么一旦并发HttpSession数量超过限额，将会重定向到expiredUrl指定的路径 
        -->
        <property name="expiredUrl">
            <value>/login/concurrentError.jsp</value>
        </property>
    </bean>
    <bean id="concurrentSessionController"
          class="org.acegisecurity.concurrent.ConcurrentSessionControllerImpl">
        <property name="maximumSessions" value="1"></property>
        <property name="sessionRegistry" ref="sessionRegistry"></property>
        <property name="exceptionIfMaximumExceeded" value="false"></property>
    </bean>
    <bean id="sessionRegistry" class="org.acegisecurity.concurrent.SessionRegistryImpl">
    </bean>
    <!-- ========================= 决策授权管理器 ========================= -->
    <bean id="accessDecisionManager"
          class="org.acegisecurity.vote.AffirmativeBased">
        <!-- 指派投票策略 -->
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter"/>
            </list>
        </property>
        <!-- 是否全部弃权就通过 -->
        <property name="allowIfAllAbstainDecisions" value="false"/>
    </bean>
    <!-- ================= 投票策略实现 ===========-->
    <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter">
        <property name="rolePrefix" value="ROLE_"/>
    </bean>
</beans>
